<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.elwy.eplus.core.entity.DataAclMapper">
	<resultMap id="BaseResultMap" type="cn.elwy.eplus.core.entity.DataAcl">
		<id column="FID" property="id" jdbcType="VARCHAR" />
		<result column="FDATA_CODE" property="dataCode" jdbcType="VARCHAR" />
		<result column="FDATA_NAME" property="dataName" jdbcType="VARCHAR" />
		<result column="FPROPERTY" property="property" jdbcType="VARCHAR" />
		<result column="FFIELD" property="field" jdbcType="VARCHAR" />
		<result column="FENABLE" property="enable" jdbcType="BIT" />
		<result column="FORDER" property="order" jdbcType="INTEGER" />
		<result column="FCLAZZ" property="clazz" jdbcType="VARCHAR" />
		<result column="FPARAMETER" property="parameter" jdbcType="VARCHAR" />
		<result column="FREMARK" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Condition_Where_Clause">
		<where>
			<choose>
				<when test="criterias != null and criterias.size() &gt; 0">
					<foreach collection="criterias" item="criteria" separator="AND">
						<if test="criteria.queryRules != null and criteria.queryRules.size() &gt; 0">
							<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
								<foreach collection="criteria.queryRules" item="item" index="_i">
									<choose>
										<when test="item.isNoValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op}
										</when>
										<when test="item.isSingleValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op} #{item.value}
										</when>
										<when test="item.isBetweenValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op} #{item.value} and #{item.secondValue}
										</when>
										<when test="item.isListValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op}
											<foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
												#{listItem}
											</foreach>
										</when>
									</choose>
								</foreach>
							</trim>
						</if>
						<if test="criteria.ruleGroups != null and criteria.ruleGroups.size() &gt; 0">
							${criteria.op}
							<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
								<foreach collection="criteria.ruleGroups" item="groupItem" index="_j">
									<if test="groupItem.queryRules != null and groupItem.queryRules.size() &gt; 0">
										${criteria.groupOps[_j]}
										<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
											<foreach collection="groupItem.queryRules" item="item" index="_k">
												<choose>
													<when test="item.isNoValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op}
													</when>
													<when test="item.isSingleValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op} #{item.value}
													</when>
													<when test="item.isBetweenValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op} #{item.value} and #{item.secondValue}
													</when>
													<when test="item.isListValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op}
														<foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
															#{listItem}
														</foreach>
													</when>
												</choose>
											</foreach>
										</trim>
									</if>
								</foreach>
							</trim>
						</if>
					</foreach>
				</when>
				<when test="param != null">
					<foreach item="value" index="key" collection="param.entrySet()" separator="AND">  
						${key} = #{value}
					</foreach>
				</when>
			</choose>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<choose>
			<when test="filterColumns == null || filterColumns.isEmpty()">
		FID, FDATA_CODE, FDATA_NAME, FPROPERTY, FFIELD, FENABLE, FORDER, FCLAZZ, FPARAMETER, FREMARK 
			</when>
			<otherwise>
				<trim prefixOverrides=",">
					<if test="!filterColumns.contains(&quot;FID&quot;)">
						FID, 
					</if>
					<if test="!filterColumns.contains(&quot;FDATA_CODE&quot;)">
						FDATA_CODE, 
					</if>
					<if test="!filterColumns.contains(&quot;FDATA_NAME&quot;)">
						FDATA_NAME, 
					</if>
					<if test="!filterColumns.contains(&quot;FPROPERTY&quot;)">
						FPROPERTY, 
					</if>
					<if test="!filterColumns.contains(&quot;FFIELD&quot;)">
						FFIELD, 
					</if>
					<if test="!filterColumns.contains(&quot;FENABLE&quot;)">
						FENABLE, 
					</if>
					<if test="!filterColumns.contains(&quot;FORDER&quot;)">
						FORDER, 
					</if>
					<if test="!filterColumns.contains(&quot;FCLAZZ&quot;)">
						FCLAZZ, 
					</if>
					<if test="!filterColumns.contains(&quot;FPARAMETER&quot;)">
						FPARAMETER, 
					</if>
					<if test="!filterColumns.contains(&quot;FREMARK&quot;)">
						FREMARK 
					</if>
				</trim>
			</otherwise>
		</choose>
	</sql>
	<select id="countByCondition" parameterType="cn.elwy.common.entity.Condition" resultType="java.lang.Long">
		select count(*) from ect_data_acl
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</select>
	<select id="selectByCondition" resultMap="BaseResultMap" parameterType="cn.elwy.common.entity.Condition">
		select
		<include refid="Base_Column_List" />
		from ect_data_acl
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
		<if test="orderRules != null">
			order by 
			<foreach collection="orderRules" item="item" separator=",">
				${item.field}
				<if test="item.desc">
					desc
				</if>
			</foreach>
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.elwy.common.entity.Condition">
		select 
		<include refid="Base_Column_List" />
		from ect_data_acl
		where FID = #{_parameter.id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey">
		delete from ect_data_acl
		where FID = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByPrimaryKeys">
		delete from ect_data_acl
		where FID in (<foreach collection="ids" item="id" open="(" close=")" separator=",">#{listItem}</foreach>)
	</delete>
	<delete id="deleteByCondition" parameterType="cn.elwy.common.entity.Condition">
		delete from ect_data_acl
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.elwy.eplus.core.entity.DataAcl">
		insert into ect_data_acl (FID, FDATA_CODE, FDATA_NAME, FPROPERTY, FFIELD, FENABLE, FORDER, FCLAZZ, FPARAMETER, FREMARK )
		values (
			#{id, jdbcType=VARCHAR}, 
			#{dataCode, jdbcType=VARCHAR}, 
			#{dataName, jdbcType=VARCHAR}, 
			#{property, jdbcType=VARCHAR}, 
			#{field, jdbcType=VARCHAR}, 
			#{enable, jdbcType=BIT}, 
			#{order, jdbcType=INTEGER}, 
			#{clazz, jdbcType=VARCHAR}, 
			#{parameter, jdbcType=VARCHAR}, 
			#{remark, jdbcType=VARCHAR} 
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.elwy.eplus.core.entity.DataAcl">
		insert into ect_data_acl
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				FID,
			</if>
			<if test="dataCode != null">
				FDATA_CODE,
			</if>
			<if test="dataName != null">
				FDATA_NAME,
			</if>
			<if test="property != null">
				FPROPERTY,
			</if>
			<if test="field != null">
				FFIELD,
			</if>
			<if test="enable != null">
				FENABLE,
			</if>
			<if test="order != null">
				FORDER,
			</if>
			<if test="clazz != null">
				FCLAZZ,
			</if>
			<if test="parameter != null">
				FPARAMETER,
			</if>
			<if test="remark != null">
				FREMARK
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id, jdbcType=VARCHAR},
			</if>
			<if test="dataCode != null">
				#{dataCode, jdbcType=VARCHAR},
			</if>
			<if test="dataName != null">
				#{dataName, jdbcType=VARCHAR},
			</if>
			<if test="property != null">
				#{property, jdbcType=VARCHAR},
			</if>
			<if test="field != null">
				#{field, jdbcType=VARCHAR},
			</if>
			<if test="enable != null">
				#{enable, jdbcType=BIT},
			</if>
			<if test="order != null">
				#{order, jdbcType=INTEGER},
			</if>
			<if test="clazz != null">
				#{clazz, jdbcType=VARCHAR},
			</if>
			<if test="parameter != null">
				#{parameter, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark, jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	<update id="updateByConditionSelective" parameterType="map">
		update ect_data_acl
		<set>
			<if test="data.dataCode != null">
				FDATA_CODE = #{data.dataCode, jdbcType=VARCHAR},
			</if>
			<if test="data.dataName != null">
				FDATA_NAME = #{data.dataName, jdbcType=VARCHAR},
			</if>
			<if test="data.property != null">
				FPROPERTY = #{data.property, jdbcType=VARCHAR},
			</if>
			<if test="data.field != null">
				FFIELD = #{data.field, jdbcType=VARCHAR},
			</if>
			<if test="data.enable != null">
				FENABLE = #{data.enable, jdbcType=BIT},
			</if>
			<if test="data.order != null">
				FORDER = #{data.order, jdbcType=INTEGER},
			</if>
			<if test="data.clazz != null">
				FCLAZZ = #{data.clazz, jdbcType=VARCHAR},
			</if>
			<if test="data.parameter != null">
				FPARAMETER = #{data.parameter, jdbcType=VARCHAR},
			</if>
			<if test="data.remark != null">
				FREMARK = #{data.remark, jdbcType=VARCHAR}
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</update>
	<update id="updateByCondition" parameterType="map">
		update ect_data_acl
		set 
			FDATA_CODE = #{data.dataCode, jdbcType=VARCHAR},
			FDATA_NAME = #{data.dataName, jdbcType=VARCHAR},
			FPROPERTY = #{data.property, jdbcType=VARCHAR},
			FFIELD = #{data.field, jdbcType=VARCHAR},
			FENABLE = #{data.enable, jdbcType=BIT},
			FORDER = #{data.order, jdbcType=INTEGER},
			FCLAZZ = #{data.clazz, jdbcType=VARCHAR},
			FPARAMETER = #{data.parameter, jdbcType=VARCHAR},
			FREMARK = #{data.remark, jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.elwy.eplus.core.entity.DataAcl">
		update ect_data_acl
		<set>
			<if test="dataCode != null">
				FDATA_CODE = #{dataCode, jdbcType=VARCHAR},
			</if>
			<if test="dataName != null">
				FDATA_NAME = #{dataName, jdbcType=VARCHAR},
			</if>
			<if test="property != null">
				FPROPERTY = #{property, jdbcType=VARCHAR},
			</if>
			<if test="field != null">
				FFIELD = #{field, jdbcType=VARCHAR},
			</if>
			<if test="enable != null">
				FENABLE = #{enable, jdbcType=BIT},
			</if>
			<if test="order != null">
				FORDER = #{order, jdbcType=INTEGER},
			</if>
			<if test="clazz != null">
				FCLAZZ = #{clazz, jdbcType=VARCHAR},
			</if>
			<if test="parameter != null">
				FPARAMETER = #{parameter, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				FREMARK = #{remark, jdbcType=VARCHAR}
			</if>
		</set>
		where FID = #{id, jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.elwy.eplus.core.entity.DataAcl">
		update ect_data_acl
		set 
			
			FDATA_CODE = #{dataCode, jdbcType=VARCHAR},
			FDATA_NAME = #{dataName, jdbcType=VARCHAR},
			FPROPERTY = #{property, jdbcType=VARCHAR},
			FFIELD = #{field, jdbcType=VARCHAR},
			FENABLE = #{enable, jdbcType=BIT},
			FORDER = #{order, jdbcType=INTEGER},
			FCLAZZ = #{clazz, jdbcType=VARCHAR},
			FPARAMETER = #{parameter, jdbcType=VARCHAR},
			FREMARK = #{remark, jdbcType=VARCHAR}
		where FID = #{id, jdbcType=VARCHAR}
	</update>
</mapper>