<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.elwy.eplus.core.entity.FunctionMapper">
	<resultMap id="BaseResultMap" type="cn.elwy.eplus.core.entity.Function">
		<id column="FID" property="id" jdbcType="VARCHAR" />
		<result column="FFUNC_TYPE" property="funcType" jdbcType="VARCHAR" />
		<result column="FFUNC_CODE" property="funcCode" jdbcType="VARCHAR" />
		<result column="FFUNC_NAME" property="funcName" jdbcType="VARCHAR" />
		<result column="FNAMEPY" property="namepy" jdbcType="VARCHAR" />
		<result column="FMODULE_CODE" property="moduleCode" jdbcType="VARCHAR" />
		<result column="FDISPLAYABLE" property="displayable" jdbcType="BIT" />
		<result column="FENABLE" property="enable" jdbcType="BIT" />
		<result column="FORDER" property="order" jdbcType="INTEGER" />
		<result column="FTARGET" property="target" jdbcType="VARCHAR" />
		<result column="FICON" property="icon" jdbcType="VARCHAR" />
		<result column="FURL" property="url" jdbcType="VARCHAR" />
		<result column="FACTION" property="action" jdbcType="VARCHAR" />
		<result column="FREMARK" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Condition_Where_Clause">
		<where>
			<choose>
				<when test="criterias != null and criterias.size() &gt; 0">
					<foreach collection="criterias" item="criteria" separator="AND">
						<if test="criteria.queryRules != null and criteria.queryRules.size() &gt; 0">
							<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
								<foreach collection="criteria.queryRules" item="item" index="_i">
									<choose>
										<when test="item.isNoValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op}
										</when>
										<when test="item.isSingleValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op} #{item.value}
										</when>
										<when test="item.isBetweenValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op} #{item.value} and #{item.secondValue}
										</when>
										<when test="item.isMultiValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op}
											<foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
												#{listItem}
											</foreach>
										</when>
									</choose>
								</foreach>
							</trim>
						</if>
						<if test="criteria.ruleGroups != null and criteria.ruleGroups.size() &gt; 0">
							${criteria.op}
							<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
								<foreach collection="criteria.ruleGroups" item="groupItem" index="_j">
									<if test="groupItem.queryRules != null and groupItem.queryRules.size() &gt; 0">
										${criteria.groupOps[_j]}
										<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
											<foreach collection="groupItem.queryRules" item="item" index="_k">
												<choose>
													<when test="item.isNoValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op}
													</when>
													<when test="item.isSingleValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op} #{item.value}
													</when>
													<when test="item.isBetweenValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op} #{item.value} and #{item.secondValue}
													</when>
													<when test="item.isMultiValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op}
														<foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
															#{listItem}
														</foreach>
													</when>
												</choose>
											</foreach>
										</trim>
									</if>
								</foreach>
							</trim>
						</if>
					</foreach>
				</when>
				<when test="param != null">
					<foreach item="value" index="key" collection="param.entrySet()" separator="AND">  
						${key} = #{value}
					</foreach>
				</when>
			</choose>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<choose>
			<when test="filterColumns == null || filterColumns.isEmpty()">
		FID, FFUNC_TYPE, FFUNC_CODE, FFUNC_NAME, FNAMEPY, FMODULE_CODE, FDISPLAYABLE, FENABLE, FORDER, FTARGET, FICON, FURL, FACTION, FREMARK 
			</when>
			<otherwise>
				<trim prefixOverrides=",">
					<if test="!filterColumns.contains(&quot;FID&quot;)">
						FID, 
					</if>
					<if test="!filterColumns.contains(&quot;FFUNC_TYPE&quot;)">
						FFUNC_TYPE, 
					</if>
					<if test="!filterColumns.contains(&quot;FFUNC_CODE&quot;)">
						FFUNC_CODE, 
					</if>
					<if test="!filterColumns.contains(&quot;FFUNC_NAME&quot;)">
						FFUNC_NAME, 
					</if>
					<if test="!filterColumns.contains(&quot;FNAMEPY&quot;)">
						FNAMEPY, 
					</if>
					<if test="!filterColumns.contains(&quot;FMODULE_CODE&quot;)">
						FMODULE_CODE, 
					</if>
					<if test="!filterColumns.contains(&quot;FDISPLAYABLE&quot;)">
						FDISPLAYABLE, 
					</if>
					<if test="!filterColumns.contains(&quot;FENABLE&quot;)">
						FENABLE, 
					</if>
					<if test="!filterColumns.contains(&quot;FORDER&quot;)">
						FORDER, 
					</if>
					<if test="!filterColumns.contains(&quot;FTARGET&quot;)">
						FTARGET, 
					</if>
					<if test="!filterColumns.contains(&quot;FICON&quot;)">
						FICON, 
					</if>
					<if test="!filterColumns.contains(&quot;FURL&quot;)">
						FURL, 
					</if>
					<if test="!filterColumns.contains(&quot;FACTION&quot;)">
						FACTION, 
					</if>
					<if test="!filterColumns.contains(&quot;FREMARK&quot;)">
						FREMARK 
					</if>
				</trim>
			</otherwise>
		</choose>
	</sql>
	<select id="countByCondition" parameterType="cn.elwy.common.entity.Condition" resultType="java.lang.Long">
		select count(*) from ect_function
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</select>
	<select id="selectByCondition" resultMap="BaseResultMap" parameterType="cn.elwy.common.entity.Condition">
		select
		<include refid="Base_Column_List" />
		from ect_function
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
		<if test="orderRules != null">
			order by 
			<foreach collection="orderRules" item="item" separator=",">
				${item.field}
				<if test="item.desc">
					desc
				</if>
			</foreach>
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.elwy.common.entity.Condition">
		select 
		<include refid="Base_Column_List" />
		from ect_function
		where FID = #{_parameter.id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey">
		delete from ect_function
		where FID = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByPrimaryKeys">
		delete from ect_function
		where FID in (<foreach collection="ids" item="id" open="(" close=")" separator=",">#{listItem}</foreach>)
	</delete>
	<delete id="deleteByCondition" parameterType="cn.elwy.common.entity.Condition">
		delete from ect_function
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.elwy.eplus.core.entity.Function">
		insert into ect_function (FID, FFUNC_TYPE, FFUNC_CODE, FFUNC_NAME, FNAMEPY, FMODULE_CODE, FDISPLAYABLE, FENABLE, FORDER, FTARGET, FICON, FURL, FACTION, FREMARK )
		values (
			#{id, jdbcType=VARCHAR}, 
			#{funcType, jdbcType=VARCHAR}, 
			#{funcCode, jdbcType=VARCHAR}, 
			#{funcName, jdbcType=VARCHAR}, 
			#{namepy, jdbcType=VARCHAR}, 
			#{moduleCode, jdbcType=VARCHAR}, 
			#{displayable, jdbcType=BIT}, 
			#{enable, jdbcType=BIT}, 
			#{order, jdbcType=INTEGER}, 
			#{target, jdbcType=VARCHAR}, 
			#{icon, jdbcType=VARCHAR}, 
			#{url, jdbcType=VARCHAR}, 
			#{action, jdbcType=VARCHAR}, 
			#{remark, jdbcType=VARCHAR} 
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.elwy.eplus.core.entity.Function">
		insert into ect_function
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				FID,
			</if>
			<if test="funcType != null">
				FFUNC_TYPE,
			</if>
			<if test="funcCode != null">
				FFUNC_CODE,
			</if>
			<if test="funcName != null">
				FFUNC_NAME,
			</if>
			<if test="namepy != null">
				FNAMEPY,
			</if>
			<if test="moduleCode != null">
				FMODULE_CODE,
			</if>
			<if test="displayable != null">
				FDISPLAYABLE,
			</if>
			<if test="enable != null">
				FENABLE,
			</if>
			<if test="order != null">
				FORDER,
			</if>
			<if test="target != null">
				FTARGET,
			</if>
			<if test="icon != null">
				FICON,
			</if>
			<if test="url != null">
				FURL,
			</if>
			<if test="action != null">
				FACTION,
			</if>
			<if test="remark != null">
				FREMARK
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id, jdbcType=VARCHAR},
			</if>
			<if test="funcType != null">
				#{funcType, jdbcType=VARCHAR},
			</if>
			<if test="funcCode != null">
				#{funcCode, jdbcType=VARCHAR},
			</if>
			<if test="funcName != null">
				#{funcName, jdbcType=VARCHAR},
			</if>
			<if test="namepy != null">
				#{namepy, jdbcType=VARCHAR},
			</if>
			<if test="moduleCode != null">
				#{moduleCode, jdbcType=VARCHAR},
			</if>
			<if test="displayable != null">
				#{displayable, jdbcType=BIT},
			</if>
			<if test="enable != null">
				#{enable, jdbcType=BIT},
			</if>
			<if test="order != null">
				#{order, jdbcType=INTEGER},
			</if>
			<if test="target != null">
				#{target, jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				#{icon, jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url, jdbcType=VARCHAR},
			</if>
			<if test="action != null">
				#{action, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark, jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	<update id="updateByConditionSelective" parameterType="map">
		update ect_function
		<set>
			<if test="data.funcType != null">
				FFUNC_TYPE = #{data.funcType, jdbcType=VARCHAR},
			</if>
			<if test="data.funcCode != null">
				FFUNC_CODE = #{data.funcCode, jdbcType=VARCHAR},
			</if>
			<if test="data.funcName != null">
				FFUNC_NAME = #{data.funcName, jdbcType=VARCHAR},
			</if>
			<if test="data.namepy != null">
				FNAMEPY = #{data.namepy, jdbcType=VARCHAR},
			</if>
			<if test="data.moduleCode != null">
				FMODULE_CODE = #{data.moduleCode, jdbcType=VARCHAR},
			</if>
			<if test="data.displayable != null">
				FDISPLAYABLE = #{data.displayable, jdbcType=BIT},
			</if>
			<if test="data.enable != null">
				FENABLE = #{data.enable, jdbcType=BIT},
			</if>
			<if test="data.order != null">
				FORDER = #{data.order, jdbcType=INTEGER},
			</if>
			<if test="data.target != null">
				FTARGET = #{data.target, jdbcType=VARCHAR},
			</if>
			<if test="data.icon != null">
				FICON = #{data.icon, jdbcType=VARCHAR},
			</if>
			<if test="data.url != null">
				FURL = #{data.url, jdbcType=VARCHAR},
			</if>
			<if test="data.action != null">
				FACTION = #{data.action, jdbcType=VARCHAR},
			</if>
			<if test="data.remark != null">
				FREMARK = #{data.remark, jdbcType=VARCHAR}
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</update>
	<update id="updateByCondition" parameterType="map">
		update ect_function
		set 
			FFUNC_TYPE = #{data.funcType, jdbcType=VARCHAR},
			FFUNC_CODE = #{data.funcCode, jdbcType=VARCHAR},
			FFUNC_NAME = #{data.funcName, jdbcType=VARCHAR},
			FNAMEPY = #{data.namepy, jdbcType=VARCHAR},
			FMODULE_CODE = #{data.moduleCode, jdbcType=VARCHAR},
			FDISPLAYABLE = #{data.displayable, jdbcType=BIT},
			FENABLE = #{data.enable, jdbcType=BIT},
			FORDER = #{data.order, jdbcType=INTEGER},
			FTARGET = #{data.target, jdbcType=VARCHAR},
			FICON = #{data.icon, jdbcType=VARCHAR},
			FURL = #{data.url, jdbcType=VARCHAR},
			FACTION = #{data.action, jdbcType=VARCHAR},
			FREMARK = #{data.remark, jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.elwy.eplus.core.entity.Function">
		update ect_function
		<set>
			<if test="funcType != null">
				FFUNC_TYPE = #{funcType, jdbcType=VARCHAR},
			</if>
			<if test="funcCode != null">
				FFUNC_CODE = #{funcCode, jdbcType=VARCHAR},
			</if>
			<if test="funcName != null">
				FFUNC_NAME = #{funcName, jdbcType=VARCHAR},
			</if>
			<if test="namepy != null">
				FNAMEPY = #{namepy, jdbcType=VARCHAR},
			</if>
			<if test="moduleCode != null">
				FMODULE_CODE = #{moduleCode, jdbcType=VARCHAR},
			</if>
			<if test="displayable != null">
				FDISPLAYABLE = #{displayable, jdbcType=BIT},
			</if>
			<if test="enable != null">
				FENABLE = #{enable, jdbcType=BIT},
			</if>
			<if test="order != null">
				FORDER = #{order, jdbcType=INTEGER},
			</if>
			<if test="target != null">
				FTARGET = #{target, jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				FICON = #{icon, jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				FURL = #{url, jdbcType=VARCHAR},
			</if>
			<if test="action != null">
				FACTION = #{action, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				FREMARK = #{remark, jdbcType=VARCHAR}
			</if>
		</set>
		where FID = #{id, jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.elwy.eplus.core.entity.Function">
		update ect_function
		set 
			
			FFUNC_TYPE = #{funcType, jdbcType=VARCHAR},
			FFUNC_CODE = #{funcCode, jdbcType=VARCHAR},
			FFUNC_NAME = #{funcName, jdbcType=VARCHAR},
			FNAMEPY = #{namepy, jdbcType=VARCHAR},
			FMODULE_CODE = #{moduleCode, jdbcType=VARCHAR},
			FDISPLAYABLE = #{displayable, jdbcType=BIT},
			FENABLE = #{enable, jdbcType=BIT},
			FORDER = #{order, jdbcType=INTEGER},
			FTARGET = #{target, jdbcType=VARCHAR},
			FICON = #{icon, jdbcType=VARCHAR},
			FURL = #{url, jdbcType=VARCHAR},
			FACTION = #{action, jdbcType=VARCHAR},
			FREMARK = #{remark, jdbcType=VARCHAR}
		where FID = #{id, jdbcType=VARCHAR}
	</update>
</mapper>