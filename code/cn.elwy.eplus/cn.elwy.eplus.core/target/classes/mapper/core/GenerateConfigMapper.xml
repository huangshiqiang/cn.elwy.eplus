<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.elwy.eplus.core.entity.GenerateConfigMapper">
	<resultMap id="BaseResultMap" type="cn.elwy.eplus.core.entity.GenerateConfig">
		<id column="FID" property="id" jdbcType="VARCHAR" />
		<result column="FGENE_CODE" property="geneCode" jdbcType="VARCHAR" />
		<result column="FGENE_NAME" property="geneName" jdbcType="VARCHAR" />
		<result column="FFILE_PATH" property="filePath" jdbcType="VARCHAR" />
		<result column="FPACKAGE_NAME" property="packageName" jdbcType="VARCHAR" />
		<result column="FMODULE_NAME" property="moduleName" jdbcType="VARCHAR" />
		<result column="FSUB_MODULE_NAME" property="subModuleName" jdbcType="VARCHAR" />
		<result column="FFUNCTION_CODE" property="functionCode" jdbcType="VARCHAR" />
		<result column="FFUNCTION_NAME" property="functionName" jdbcType="VARCHAR" />
		<result column="FFUNCTION_AUTHOR" property="functionAuthor" jdbcType="VARCHAR" />
		<result column="FAUDITOR_ID" property="auditorId" jdbcType="VARCHAR" />
		<result column="FAUDIT_TIME" property="auditTime" jdbcType="TIMESTAMP" />
		<result column="FCREATOR_ID" property="creatorId" jdbcType="VARCHAR" />
		<result column="FCREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="FDELETOR_ID" property="deletorId" jdbcType="VARCHAR" />
		<result column="FDELETE_TIME" property="deleteTime" jdbcType="TIMESTAMP" />
		<result column="FEDITOR_ID" property="editorId" jdbcType="VARCHAR" />
		<result column="FEDIT_TIME" property="editTime" jdbcType="TIMESTAMP" />
		<result column="FREMARK" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Condition_Where_Clause">
		<where>
			<choose>
				<when test="criterias != null and criterias.size() &gt; 0">
					<foreach collection="criterias" item="criteria" separator="AND">
						<if test="criteria.queryRules != null and criteria.queryRules.size() &gt; 0">
							<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
								<foreach collection="criteria.queryRules" item="item" index="_i">
									<choose>
										<when test="item.isNoValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op}
										</when>
										<when test="item.isSingleValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op} #{item.value}
										</when>
										<when test="item.isBetweenValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op} #{item.value} and #{item.secondValue}
										</when>
										<when test="item.isListValue()">
											${criteria.queryOps[_i]} ${item.field} ${item.op}
											<foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
												#{listItem}
											</foreach>
										</when>
									</choose>
								</foreach>
							</trim>
						</if>
						<if test="criteria.ruleGroups != null and criteria.ruleGroups.size() &gt; 0">
							${criteria.op}
							<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
								<foreach collection="criteria.ruleGroups" item="groupItem" index="_j">
									<if test="groupItem.queryRules != null and groupItem.queryRules.size() &gt; 0">
										${criteria.groupOps[_j]}
										<trim prefix="(" suffix=")" prefixOverrides="AND|OR">
											<foreach collection="groupItem.queryRules" item="item" index="_k">
												<choose>
													<when test="item.isNoValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op}
													</when>
													<when test="item.isSingleValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op} #{item.value}
													</when>
													<when test="item.isBetweenValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op} #{item.value} and #{item.secondValue}
													</when>
													<when test="item.isListValue()">
														${groupItem.queryOps[_k]} ${item.field} ${item.op}
														<foreach collection="item.value" item="listItem" open="(" close=")" separator=",">
															#{listItem}
														</foreach>
													</when>
												</choose>
											</foreach>
										</trim>
									</if>
								</foreach>
							</trim>
						</if>
					</foreach>
				</when>
				<when test="param != null">
					<foreach item="value" index="key" collection="param.entrySet()" separator="AND">  
						${key} = #{value}
					</foreach>
				</when>
			</choose>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<choose>
			<when test="filterColumns == null || filterColumns.isEmpty()">
		FID, FGENE_CODE, FGENE_NAME, FFILE_PATH, FPACKAGE_NAME, FMODULE_NAME, FSUB_MODULE_NAME, FFUNCTION_CODE, FFUNCTION_NAME, FFUNCTION_AUTHOR, FAUDITOR_ID, FAUDIT_TIME, FCREATOR_ID, FCREATE_TIME, FDELETOR_ID, FDELETE_TIME, FEDITOR_ID, FEDIT_TIME, FREMARK 
			</when>
			<otherwise>
				<trim prefixOverrides=",">
					<if test="!filterColumns.contains(&quot;FID&quot;)">
						FID, 
					</if>
					<if test="!filterColumns.contains(&quot;FGENE_CODE&quot;)">
						FGENE_CODE, 
					</if>
					<if test="!filterColumns.contains(&quot;FGENE_NAME&quot;)">
						FGENE_NAME, 
					</if>
					<if test="!filterColumns.contains(&quot;FFILE_PATH&quot;)">
						FFILE_PATH, 
					</if>
					<if test="!filterColumns.contains(&quot;FPACKAGE_NAME&quot;)">
						FPACKAGE_NAME, 
					</if>
					<if test="!filterColumns.contains(&quot;FMODULE_NAME&quot;)">
						FMODULE_NAME, 
					</if>
					<if test="!filterColumns.contains(&quot;FSUB_MODULE_NAME&quot;)">
						FSUB_MODULE_NAME, 
					</if>
					<if test="!filterColumns.contains(&quot;FFUNCTION_CODE&quot;)">
						FFUNCTION_CODE, 
					</if>
					<if test="!filterColumns.contains(&quot;FFUNCTION_NAME&quot;)">
						FFUNCTION_NAME, 
					</if>
					<if test="!filterColumns.contains(&quot;FFUNCTION_AUTHOR&quot;)">
						FFUNCTION_AUTHOR, 
					</if>
					<if test="!filterColumns.contains(&quot;FAUDITOR_ID&quot;)">
						FAUDITOR_ID, 
					</if>
					<if test="!filterColumns.contains(&quot;FAUDIT_TIME&quot;)">
						FAUDIT_TIME, 
					</if>
					<if test="!filterColumns.contains(&quot;FCREATOR_ID&quot;)">
						FCREATOR_ID, 
					</if>
					<if test="!filterColumns.contains(&quot;FCREATE_TIME&quot;)">
						FCREATE_TIME, 
					</if>
					<if test="!filterColumns.contains(&quot;FDELETOR_ID&quot;)">
						FDELETOR_ID, 
					</if>
					<if test="!filterColumns.contains(&quot;FDELETE_TIME&quot;)">
						FDELETE_TIME, 
					</if>
					<if test="!filterColumns.contains(&quot;FEDITOR_ID&quot;)">
						FEDITOR_ID, 
					</if>
					<if test="!filterColumns.contains(&quot;FEDIT_TIME&quot;)">
						FEDIT_TIME, 
					</if>
					<if test="!filterColumns.contains(&quot;FREMARK&quot;)">
						FREMARK 
					</if>
				</trim>
			</otherwise>
		</choose>
	</sql>
	<select id="countByCondition" parameterType="cn.elwy.common.entity.Condition" resultType="java.lang.Long">
		select count(*) from ect_generate_config
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</select>
	<select id="selectByCondition" resultMap="BaseResultMap" parameterType="cn.elwy.common.entity.Condition">
		select
		<include refid="Base_Column_List" />
		from ect_generate_config
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
		<if test="orderRules != null">
			order by 
			<foreach collection="orderRules" item="item" separator=",">
				${item.field}
				<if test="item.desc">
					desc
				</if>
			</foreach>
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.elwy.common.entity.Condition">
		select 
		<include refid="Base_Column_List" />
		from ect_generate_config
		where FID = #{_parameter.id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey">
		delete from ect_generate_config
		where FID = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByPrimaryKeys">
		delete from ect_generate_config
		where FID in (<foreach collection="ids" item="id" open="(" close=")" separator=",">#{listItem}</foreach>)
	</delete>
	<delete id="deleteByCondition" parameterType="cn.elwy.common.entity.Condition">
		delete from ect_generate_config
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.elwy.eplus.core.entity.GenerateConfig">
		insert into ect_generate_config (FID, FGENE_CODE, FGENE_NAME, FFILE_PATH, FPACKAGE_NAME, FMODULE_NAME, FSUB_MODULE_NAME, FFUNCTION_CODE, FFUNCTION_NAME, FFUNCTION_AUTHOR, FAUDITOR_ID, FAUDIT_TIME, FCREATOR_ID, FCREATE_TIME, FDELETOR_ID, FDELETE_TIME, FEDITOR_ID, FEDIT_TIME, FREMARK )
		values (
			#{id, jdbcType=VARCHAR}, 
			#{geneCode, jdbcType=VARCHAR}, 
			#{geneName, jdbcType=VARCHAR}, 
			#{filePath, jdbcType=VARCHAR}, 
			#{packageName, jdbcType=VARCHAR}, 
			#{moduleName, jdbcType=VARCHAR}, 
			#{subModuleName, jdbcType=VARCHAR}, 
			#{functionCode, jdbcType=VARCHAR}, 
			#{functionName, jdbcType=VARCHAR}, 
			#{functionAuthor, jdbcType=VARCHAR}, 
			#{auditorId, jdbcType=VARCHAR}, 
			#{auditTime, jdbcType=TIMESTAMP}, 
			#{creatorId, jdbcType=VARCHAR}, 
			#{createTime, jdbcType=TIMESTAMP}, 
			#{deletorId, jdbcType=VARCHAR}, 
			#{deleteTime, jdbcType=TIMESTAMP}, 
			#{editorId, jdbcType=VARCHAR}, 
			#{editTime, jdbcType=TIMESTAMP}, 
			#{remark, jdbcType=VARCHAR} 
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.elwy.eplus.core.entity.GenerateConfig">
		insert into ect_generate_config
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				FID,
			</if>
			<if test="geneCode != null">
				FGENE_CODE,
			</if>
			<if test="geneName != null">
				FGENE_NAME,
			</if>
			<if test="filePath != null">
				FFILE_PATH,
			</if>
			<if test="packageName != null">
				FPACKAGE_NAME,
			</if>
			<if test="moduleName != null">
				FMODULE_NAME,
			</if>
			<if test="subModuleName != null">
				FSUB_MODULE_NAME,
			</if>
			<if test="functionCode != null">
				FFUNCTION_CODE,
			</if>
			<if test="functionName != null">
				FFUNCTION_NAME,
			</if>
			<if test="functionAuthor != null">
				FFUNCTION_AUTHOR,
			</if>
			<if test="auditorId != null">
				FAUDITOR_ID,
			</if>
			<if test="auditTime != null">
				FAUDIT_TIME,
			</if>
			<if test="creatorId != null">
				FCREATOR_ID,
			</if>
			<if test="createTime != null">
				FCREATE_TIME,
			</if>
			<if test="deletorId != null">
				FDELETOR_ID,
			</if>
			<if test="deleteTime != null">
				FDELETE_TIME,
			</if>
			<if test="editorId != null">
				FEDITOR_ID,
			</if>
			<if test="editTime != null">
				FEDIT_TIME,
			</if>
			<if test="remark != null">
				FREMARK
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id, jdbcType=VARCHAR},
			</if>
			<if test="geneCode != null">
				#{geneCode, jdbcType=VARCHAR},
			</if>
			<if test="geneName != null">
				#{geneName, jdbcType=VARCHAR},
			</if>
			<if test="filePath != null">
				#{filePath, jdbcType=VARCHAR},
			</if>
			<if test="packageName != null">
				#{packageName, jdbcType=VARCHAR},
			</if>
			<if test="moduleName != null">
				#{moduleName, jdbcType=VARCHAR},
			</if>
			<if test="subModuleName != null">
				#{subModuleName, jdbcType=VARCHAR},
			</if>
			<if test="functionCode != null">
				#{functionCode, jdbcType=VARCHAR},
			</if>
			<if test="functionName != null">
				#{functionName, jdbcType=VARCHAR},
			</if>
			<if test="functionAuthor != null">
				#{functionAuthor, jdbcType=VARCHAR},
			</if>
			<if test="auditorId != null">
				#{auditorId, jdbcType=VARCHAR},
			</if>
			<if test="auditTime != null">
				#{auditTime, jdbcType=TIMESTAMP},
			</if>
			<if test="creatorId != null">
				#{creatorId, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="deletorId != null">
				#{deletorId, jdbcType=VARCHAR},
			</if>
			<if test="deleteTime != null">
				#{deleteTime, jdbcType=TIMESTAMP},
			</if>
			<if test="editorId != null">
				#{editorId, jdbcType=VARCHAR},
			</if>
			<if test="editTime != null">
				#{editTime, jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				#{remark, jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	<update id="updateByConditionSelective" parameterType="map">
		update ect_generate_config
		<set>
			<if test="data.geneCode != null">
				FGENE_CODE = #{data.geneCode, jdbcType=VARCHAR},
			</if>
			<if test="data.geneName != null">
				FGENE_NAME = #{data.geneName, jdbcType=VARCHAR},
			</if>
			<if test="data.filePath != null">
				FFILE_PATH = #{data.filePath, jdbcType=VARCHAR},
			</if>
			<if test="data.packageName != null">
				FPACKAGE_NAME = #{data.packageName, jdbcType=VARCHAR},
			</if>
			<if test="data.moduleName != null">
				FMODULE_NAME = #{data.moduleName, jdbcType=VARCHAR},
			</if>
			<if test="data.subModuleName != null">
				FSUB_MODULE_NAME = #{data.subModuleName, jdbcType=VARCHAR},
			</if>
			<if test="data.functionCode != null">
				FFUNCTION_CODE = #{data.functionCode, jdbcType=VARCHAR},
			</if>
			<if test="data.functionName != null">
				FFUNCTION_NAME = #{data.functionName, jdbcType=VARCHAR},
			</if>
			<if test="data.functionAuthor != null">
				FFUNCTION_AUTHOR = #{data.functionAuthor, jdbcType=VARCHAR},
			</if>
			<if test="data.auditorId != null">
				FAUDITOR_ID = #{data.auditorId, jdbcType=VARCHAR},
			</if>
			<if test="data.auditTime != null">
				FAUDIT_TIME = #{data.auditTime, jdbcType=TIMESTAMP},
			</if>
			<if test="data.creatorId != null">
				FCREATOR_ID = #{data.creatorId, jdbcType=VARCHAR},
			</if>
			<if test="data.createTime != null">
				FCREATE_TIME = #{data.createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="data.deletorId != null">
				FDELETOR_ID = #{data.deletorId, jdbcType=VARCHAR},
			</if>
			<if test="data.deleteTime != null">
				FDELETE_TIME = #{data.deleteTime, jdbcType=TIMESTAMP},
			</if>
			<if test="data.editorId != null">
				FEDITOR_ID = #{data.editorId, jdbcType=VARCHAR},
			</if>
			<if test="data.editTime != null">
				FEDIT_TIME = #{data.editTime, jdbcType=TIMESTAMP},
			</if>
			<if test="data.remark != null">
				FREMARK = #{data.remark, jdbcType=VARCHAR}
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</update>
	<update id="updateByCondition" parameterType="map">
		update ect_generate_config
		set 
			FGENE_CODE = #{data.geneCode, jdbcType=VARCHAR},
			FGENE_NAME = #{data.geneName, jdbcType=VARCHAR},
			FFILE_PATH = #{data.filePath, jdbcType=VARCHAR},
			FPACKAGE_NAME = #{data.packageName, jdbcType=VARCHAR},
			FMODULE_NAME = #{data.moduleName, jdbcType=VARCHAR},
			FSUB_MODULE_NAME = #{data.subModuleName, jdbcType=VARCHAR},
			FFUNCTION_CODE = #{data.functionCode, jdbcType=VARCHAR},
			FFUNCTION_NAME = #{data.functionName, jdbcType=VARCHAR},
			FFUNCTION_AUTHOR = #{data.functionAuthor, jdbcType=VARCHAR},
			FAUDITOR_ID = #{data.auditorId, jdbcType=VARCHAR},
			FAUDIT_TIME = #{data.auditTime, jdbcType=TIMESTAMP},
			FCREATOR_ID = #{data.creatorId, jdbcType=VARCHAR},
			FCREATE_TIME = #{data.createTime, jdbcType=TIMESTAMP},
			FDELETOR_ID = #{data.deletorId, jdbcType=VARCHAR},
			FDELETE_TIME = #{data.deleteTime, jdbcType=TIMESTAMP},
			FEDITOR_ID = #{data.editorId, jdbcType=VARCHAR},
			FEDIT_TIME = #{data.editTime, jdbcType=TIMESTAMP},
			FREMARK = #{data.remark, jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Condition_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.elwy.eplus.core.entity.GenerateConfig">
		update ect_generate_config
		<set>
			<if test="geneCode != null">
				FGENE_CODE = #{geneCode, jdbcType=VARCHAR},
			</if>
			<if test="geneName != null">
				FGENE_NAME = #{geneName, jdbcType=VARCHAR},
			</if>
			<if test="filePath != null">
				FFILE_PATH = #{filePath, jdbcType=VARCHAR},
			</if>
			<if test="packageName != null">
				FPACKAGE_NAME = #{packageName, jdbcType=VARCHAR},
			</if>
			<if test="moduleName != null">
				FMODULE_NAME = #{moduleName, jdbcType=VARCHAR},
			</if>
			<if test="subModuleName != null">
				FSUB_MODULE_NAME = #{subModuleName, jdbcType=VARCHAR},
			</if>
			<if test="functionCode != null">
				FFUNCTION_CODE = #{functionCode, jdbcType=VARCHAR},
			</if>
			<if test="functionName != null">
				FFUNCTION_NAME = #{functionName, jdbcType=VARCHAR},
			</if>
			<if test="functionAuthor != null">
				FFUNCTION_AUTHOR = #{functionAuthor, jdbcType=VARCHAR},
			</if>
			<if test="auditorId != null">
				FAUDITOR_ID = #{auditorId, jdbcType=VARCHAR},
			</if>
			<if test="auditTime != null">
				FAUDIT_TIME = #{auditTime, jdbcType=TIMESTAMP},
			</if>
			<if test="creatorId != null">
				FCREATOR_ID = #{creatorId, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				FCREATE_TIME = #{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="deletorId != null">
				FDELETOR_ID = #{deletorId, jdbcType=VARCHAR},
			</if>
			<if test="deleteTime != null">
				FDELETE_TIME = #{deleteTime, jdbcType=TIMESTAMP},
			</if>
			<if test="editorId != null">
				FEDITOR_ID = #{editorId, jdbcType=VARCHAR},
			</if>
			<if test="editTime != null">
				FEDIT_TIME = #{editTime, jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				FREMARK = #{remark, jdbcType=VARCHAR}
			</if>
		</set>
		where FID = #{id, jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.elwy.eplus.core.entity.GenerateConfig">
		update ect_generate_config
		set 
			
			FGENE_CODE = #{geneCode, jdbcType=VARCHAR},
			FGENE_NAME = #{geneName, jdbcType=VARCHAR},
			FFILE_PATH = #{filePath, jdbcType=VARCHAR},
			FPACKAGE_NAME = #{packageName, jdbcType=VARCHAR},
			FMODULE_NAME = #{moduleName, jdbcType=VARCHAR},
			FSUB_MODULE_NAME = #{subModuleName, jdbcType=VARCHAR},
			FFUNCTION_CODE = #{functionCode, jdbcType=VARCHAR},
			FFUNCTION_NAME = #{functionName, jdbcType=VARCHAR},
			FFUNCTION_AUTHOR = #{functionAuthor, jdbcType=VARCHAR},
			FAUDITOR_ID = #{auditorId, jdbcType=VARCHAR},
			FAUDIT_TIME = #{auditTime, jdbcType=TIMESTAMP},
			FCREATOR_ID = #{creatorId, jdbcType=VARCHAR},
			FCREATE_TIME = #{createTime, jdbcType=TIMESTAMP},
			FDELETOR_ID = #{deletorId, jdbcType=VARCHAR},
			FDELETE_TIME = #{deleteTime, jdbcType=TIMESTAMP},
			FEDITOR_ID = #{editorId, jdbcType=VARCHAR},
			FEDIT_TIME = #{editTime, jdbcType=TIMESTAMP},
			FREMARK = #{remark, jdbcType=VARCHAR}
		where FID = #{id, jdbcType=VARCHAR}
	</update>
</mapper>