<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.elwy</groupId>
	<artifactId>cn.elwy.eplus</artifactId>
	<version>2.0.0</version>
	<packaging>pom</packaging>
	<name>cn.elwy.eplus</name>
	<description>Elwy Plus</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<encoding>UTF-8</encoding>
		<java.version>1.8</java.version>
		<source.jdk.version>1.8</source.jdk.version>
		<target.jdk.version>1.8</target.jdk.version>
		<compiler.jdk.version>1.8</compiler.jdk.version>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.test.skip>true</maven.test.skip>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<surefireArgLine>-Xms512m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:MaxNewSize=256m</surefireArgLine>
	</properties>

	<modules>
		<module>cn.elwy.eplus.core</module>
		<module>cn.elwy.eplus.framework</module>
	</modules>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<!-- 先指定 src/main/resources下所有文件及文件夹为资源文件 -->
			<resource>
				<directory>src/main/resources</directory>
				<!-- <includes>
					<include>**/*</include>
					</includes> -->
			</resource>
			<!-- 设置对jdbc.properties进行过虑，即这些文件中的${key}会被替换掉为真正的值 -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>config/jdbc.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<!-- <excludes>
					<exclude>**/*.java</exclude>
					</excludes> -->
			</resource>
			<resource>
				<directory>WebContent</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/test/java</directory>
				<!-- <excludes>
					<exclude>**/*.java</exclude>
					</excludes> -->
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<inherited>true</inherited>
					<configuration>
						<encoding>${encoding}</encoding>
						<source>${source.jdk.version}</source>
						<target>${target.jdk.version}</target>
						<compilerVersion>${compiler.jdk.version}</compilerVersion>
						<fork>true</fork>
						<meminitial>128m</meminitial>
						<maxmem>1024m</maxmem>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
								<overWriteReleases>false</overWriteReleases>
								<overWriteSnapshots>false</overWriteSnapshots>
								<overWriteIfNewer>true</overWriteIfNewer>
								<includeScope>runtime</includeScope>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<!--
							<archive>
							<manifest>
							<mainClass>cn.elwy.kit.AppMain</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							</manifest>
							</archive>
						-->
						<classesDirectory></classesDirectory>
						<includeEmptyDirectories>true</includeEmptyDirectories>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<inherited>false</inherited>
					<configuration>
						<includeEmptyDirectories>true</includeEmptyDirectories>
						<archive>
							<manifestFile>WebContent/META-INF/MANIFEST.MF</manifestFile>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							</manifest>
							<manifestEntries>
								<Class-Path>.</Class-Path>
								<Bundle-Version>${project.version}</Bundle-Version>
								<Built-At>${maven.build.timestamp}</Built-At>
							</manifestEntries>
						</archive>
						<webResources>
							<resource>
								<directory>WebContent</directory>
							</resource>
						</webResources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<encoding>${encoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<encoding>${encoding}</encoding>
						<includeEmptyDirs>true</includeEmptyDirs>
					</configuration>
					<executions>
						<!-- <execution> <id>copy-resources</id> <phase>generate-sources</phase> <goals> <goal>copy-resources</goal>
							</goals> <configuration> <outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory> <resources>
							<resource>
							<directory>META-INF</directory> </resource> </resources> </configuration> </execution> -->
						<!-- <execution> <id>copy-resources-web</id> <phase>generate-sources</phase> <goals> <goal>copy-resources</goal>
							</goals> <configuration> <outputDirectory>${basedir}/target/test-classes</outputDirectory> <resources> <resource>
							<directory>WebContent</directory>
							</resource> </resources> </configuration> </execution> -->
						<!-- <execution> <id>copy-resources-mate</id> <phase>process-resources</phase> <goals> <goal>copy-resources</goal>
							</goals> <configuration> <outputDirectory>${basedir}/target/test-classes/META-INF</outputDirectory> <resources> <resource>
							<directory>${project.build.outputDirectory}/META-INF</directory> </resource> </resources> </configuration> </execution> -->
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<extensions>true</extensions>
					<configuration>
						<!-- <archive>
							<manifestFile>META-INF/MANIFEST.MF</manifestFile>
							<manifest>
							<addClasspath>false</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							</manifest>
							<manifestEntries>
							<Bundle-Version>${project.version}</Bundle-Version>
							</manifestEntries>
							</archive> -->

						<includeEmptyDirectories>true</includeEmptyDirectories>
						<instructions>
							<_include>META-INF/MANIFEST.MF</_include>
							<_failok>true</_failok>
							<_sofamode>true</_sofamode>
							<Built-At>${maven.build.timestamp}</Built-At>
							<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
							<Bundle-Version>${project.version}</Bundle-Version>
							<Bundle-Category>elwy</Bundle-Category>
							<Bundle-Vendor>elwy.cn</Bundle-Vendor>
							<Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
							<Export-Package />
							<Import-Package />
							<Bundle-ClassPath>.</Bundle-ClassPath>
							<Embed-Dependency>*;scope=compile;inline=false</Embed-Dependency>
							<Embed-Directory>lib</Embed-Directory>
						</instructions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<argLine>-Dfile.encoding=${encoding}</argLine>
						<aggregate>true</aggregate>
						<charset>${encoding}</charset>
						<encoding>${encoding}</encoding>
						<docencoding>${encoding}</docencoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>site</phase>
							<goals>
								<goal>aggregate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<!-- Sets the VM argument line used when unit tests are run. -->
						<argLine>${surefireArgLine}</argLine>
						<!-- Skips unit tests if the value of skip.unit.tests property is true -->
						<!-- <skipTests>${maven.test.skip}</skipTests> -->
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<!-- Excludes integration tests when unit tests are run. -->
							<exclude>**/*SuiteTest.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<configuration>
						<encoding>${encoding}</encoding>
						<includes>com/yss/sofa/**/*.java</includes>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>5.5.101</version>
						</dependency>
					</dependencies>

					<!-- <executions>
						<execution>
						<id>checkstyle-banned-dependencies</id>
						<goals>
						<goal>checkstyle</goal>
						</goals>
						<configuration>
						<rules>
						<bannedDependencies>
						<excludes>
						<exclude>com.puppycrawl.tools:checkstyle</exclude>
						</excludes>
						</bannedDependencies>
						</rules>
						<fail>true</fail>
						</configuration>
						</execution>
						</executions> -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<configuration>
						<sourceEncoding>${encoding}</sourceEncoding>
						<targetJdk>${target.jdk.version}</targetJdk>
						<includes>
							<include>cn/elwy/eplus/**/action/*.java</include>
							<include>cn/elwy/eplus/**/action/**/*.java</include>
							<include>cn/elwy/eplus/**/biz/*.java</include>
							<include>cn/elwy/eplus/**/biz/**/*.java</include>
							<include>cn/elwy/eplus/**/dao/*.java</include>
							<include>cn/elwy/eplus/**/dao/**/*.java</include>
							<include>cn/elwy/eplus/**/controller/*.java</include>
							<include>cn/elwy/eplus/**/controller/**/*.java</include>
							<include>cn/elwy/eplus/**/service/*.java</include>
							<include>cn/elwy/eplus/**/service/**/*.java</include>
							<include>cn/elwy/eplus/**/services/*.java</include>
							<include>cn/elwy/eplus/**/services/**/*.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<configuration>
						<!-- <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile> <includeFilterFile>findbugs-include.xml</includeFilterFile>
							<configLocation>${basedir}/springside-findbugs.xml</configLocation> -->
						<encoding>${encoding}</encoding>
						<sourceEncoding>${encoding}</sourceEncoding>
						<threshold>High</threshold>
						<effort>Default</effort>
						<findbugsXmlOutput>true</findbugsXmlOutput>
						<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
						<!-- <findbugsXmlOutputDirectory>target/site</findbugsXmlOutputDirectory> -->
						<xmlOutput>true</xmlOutput>
						<formats>
							<format>html</format>
						</formats>
						<!-- <onlyAnalyze>cn.elwy.*</onlyAnalyze> -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<configuration>
						<encoding>${encoding}</encoding>
						<formats>
							<format>html</format>
							<format>xml</format>
						</formats>
						<instrumentation>
							<includes>
								<include>cn/elwy/eplus/**/*.class</include>
								<include>cn/elwy/eplus/**/action/*.class</include>
								<include>cn/elwy/eplus/**/action/**/*.class</include>
								<include>cn/elwy/eplus/**/biz/*.class</include>
								<include>cn/elwy/eplus/**/biz/**/*.class</include>
								<include>cn/elwy/eplus/**/dao/*.class</include>
								<include>cn/elwy/eplus/**/dao/**/*.class</include>
								<include>cn/elwy/eplus/**/controller/*.class</include>
								<include>cn/elwy/eplus/**/controller/**/*.class</include>
								<include>cn/elwy/eplus/**/service/*.class</include>
								<include>cn/elwy/eplus/**/service/**/*.class</include>
								<include>cn/elwy/eplus/**/services/*.class</include>
								<include>cn/elwy/eplus/**/services/**/*.class</include>
							</includes>
						</instrumentation>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>dashboard-maven-plugin</artifactId>
					<version>1.0.0-beta-1</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.0.201403182114</version>
					<!-- <configuration> <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile> <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
						</configuration> -->
					<executions>
						<execution>
							<id>JaCoCo Agent</id>
							<phase>test-compile</phase>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<propertyName>surefireArgLine</propertyName>
								<!-- <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile> -->
							</configuration>
						</execution>
						<execution>
							<id>JaCoCo Report</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<!-- <configuration>
								<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
								<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
								</configuration> -->
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jdepend-maven-plugin</artifactId>
					<version>2.0-beta-2</version>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

</project>